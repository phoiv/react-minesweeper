[{"C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\index.js":"1","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\App.js":"2","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\reportWebVitals.js":"3","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\containers\\Minesweeper\\Minesweeper.js":"4","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\components\\GameHeader\\GameHeader.js":"5","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\components\\GameBoard\\GameBoard.js":"6","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\components\\GameBoard\\Square\\Square.js":"7","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\components\\Settings\\Settings.js":"8"},{"size":510,"mtime":1609163046062,"results":"9","hashOfConfig":"10"},{"size":471,"mtime":1609167055574,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":9234,"mtime":1616955416288,"results":"13","hashOfConfig":"10"},{"size":378,"mtime":1616955416282,"results":"14","hashOfConfig":"10"},{"size":1065,"mtime":1610629097983,"results":"15","hashOfConfig":"10"},{"size":2128,"mtime":1616955416280,"results":"16","hashOfConfig":"10"},{"size":2247,"mtime":1616955416285,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"lfjdw8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\index.js",[],["38","39"],"C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\App.js",[],"C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\reportWebVitals.js",[],"C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\containers\\Minesweeper\\Minesweeper.js",["40","41","42","43","44","45","46","47","48","49","50","51","52"],"import classes from './Minesweeper.module.css';\r\nimport GameHeader from '../../components/GameHeader/GameHeader.js'\r\nimport GameBoard from '../../components/GameBoard/GameBoard.js'\r\nimport Settings from '../../components/Settings/Settings.js'\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\n\r\nfunction Minesweeper() {\r\n    const [gameConfig, setGame] = useState({\r\n        width: 12,\r\n        height: 10,\r\n        mines: 10\r\n    });\r\n    const [board, setBoard] = useState(generateBoard(gameConfig.width, gameConfig.height, gameConfig.mines))\r\n    const [gameState, setGameState] = useState(\"ready\") //lost/won/ready/playing\r\n    const [opened, setOpened] = useState(0)\r\n    const [flagged, setFlagged] = useState(0)\r\n    const [timer, setTimer] = useState(0)\r\n    const [settingsOpen, setSettingsOpen] = useState(false);\r\n\r\n    const minesweeperBoard = useRef(null);\r\n    //the goal of the game is to open all non bombs squares\r\n    const target = gameConfig.width * gameConfig.height - gameConfig.mines;\r\n    console.log('target===', target)\r\n\r\n    //we want to catch right click on the board and disable it\r\n    useEffect(() => {\r\n        minesweeperBoard.current.addEventListener(\"contextmenu\", (evt) => flagHandler(evt, null))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (gameState === \"running\") {\r\n            let id = setInterval(function () {\r\n                setTimer(timer => timer + 1)\r\n            }\r\n                , 1000);\r\n            return () => clearInterval(id)\r\n        }\r\n    }, [gameState])\r\n\r\n    useEffect(() => {\r\n        if (opened === target)\r\n            gameWon()\r\n    }, [opened])\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"hihi\")\r\n    //     const newBoard = generateBoard(gameConfig.width, gameConfig.height, gameConfig.mines);\r\n    //     setBoard(newBoard)\r\n\r\n    // }, [gameConfig])\r\n\r\n    const flagHandler = (evt, tilePos) => {\r\n        evt.preventDefault();\r\n        console.log(\"RIGHT CLICKED\", tilePos)\r\n        //do nothing for rc on board\r\n        if (!tilePos && tilePos != 0) return;\r\n        if (board[tilePos].isOpen) return;\r\n        if (gameState === 'won' || gameState === 'lost') return;\r\n        if (board[tilePos].isFlagged) setFlagged(flagged => flagged - 1)\r\n        if (!board[tilePos].isFlagged) setFlagged(flagged => flagged + 1)\r\n\r\n        const newBoard = [...board];\r\n        newBoard[tilePos].isFlagged = !newBoard[tilePos].isFlagged;\r\n        setBoard(newBoard)\r\n    }\r\n\r\n    const revealTileHandler = (tilePos) => {\r\n        if (board[tilePos].isFlagged) return;\r\n        if (board[tilePos].content === -1) {\r\n            gameLost(tilePos);\r\n            return;\r\n        }\r\n\r\n        if (gameState === \"ready\") setGameState(\"running\")\r\n        if (gameState === 'won' || gameState === 'lost') return;\r\n\r\n        const newBoard = [...board];\r\n        newBoard[tilePos].isOpen = true;\r\n        setBoard(newBoard)\r\n        setOpened((opened) => opened + 1)\r\n        if (newBoard[tilePos].content === 0)\r\n            newBoard[tilePos].neighbours.forEach(tile => {\r\n                if (!newBoard[tile].isOpen)\r\n                    revealTileHandler(tile)\r\n            })\r\n\r\n        //check win condition\r\n\r\n    }\r\n\r\n    function gameLost(boom) {\r\n        const newBoard = [...board];\r\n        newBoard.forEach(tile => {\r\n            if (tile.content === -1 && !tile.isFlagged)\r\n                tile.isOpen = true;\r\n            //flagged non-bomb\r\n            if (tile.isFlagged && tile.content !== -1) {\r\n                tile.isOpen = true;\r\n                tile.isFlagged = false;\r\n                tile.content = -10;\r\n            }\r\n        })\r\n        newBoard[boom].content = -2\r\n        setBoard(newBoard)\r\n        setGameState(\"lost\")\r\n    }\r\n\r\n    function gameWon() {\r\n        const newBoard = [...board];\r\n        newBoard.forEach(tile => {\r\n            if (tile.content === -1)\r\n                tile.isFlagged = true;\r\n        })\r\n        setBoard(newBoard)\r\n        setGameState(\"won\")\r\n    }\r\n\r\n    const openSettings = () => {\r\n        console.log(\"open settings\")\r\n        setSettingsOpen(!settingsOpen)\r\n    }\r\n\r\n    // const onChangeValue = (evt) => {\r\n    //     console.log(evt.target.value)\r\n    // }\r\n\r\n    const settingsChanged = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('form sub')\r\n        const setting = evt.target.elements.setting.value;\r\n\r\n        const newConf = {};\r\n        if (setting == 'beginner') {\r\n            console.log('beginner set')\r\n            newConf.width = 9;\r\n            newConf.height = 9;\r\n            newConf.mines = 10;\r\n        }\r\n        if (setting == 'intermediate') {\r\n            console.log('intermediate set')\r\n            newConf.width = 16;\r\n            newConf.height = 16;\r\n            newConf.mines = 40;\r\n        }\r\n        if (setting == 'expert') {\r\n            console.log('expert set')\r\n            newConf.width = 16;\r\n            newConf.height = 30;\r\n            newConf.mines = 99;\r\n        }\r\n        if (setting == 'custom') {\r\n            console.log('custom set')\r\n            newConf.width = parseInt(evt.target.elements.cW.value);\r\n            if (newConf.width != newConf.width || newConf.width < 5) newConf.width = 5;\r\n            if (newConf.width > 30) newConf.width = 30\r\n            newConf.height = parseInt(evt.target.elements.cH.value);\r\n            if (newConf.height != newConf.height || newConf.height < 5) newConf.height = 5;\r\n            if (newConf.height > 30) newConf.height = 30\r\n            newConf.mines = parseInt(evt.target.elements.cM.value);\r\n            if (newConf.mines != newConf.mines || newConf.mines < 5) newConf.mines = 5;\r\n            if (newConf.mines > newConf.height * newConf.width) newConf.mines = newConf.height * newConf.width - 1\r\n\r\n        }\r\n        // console.log(newConf.width, newConf.height, newConf.mines)\r\n        setSettingsOpen(false);\r\n        const newBoard = generateBoard(newConf.width, newConf.height, newConf.mines);\r\n        setBoard(newBoard)\r\n        setGame(newConf)\r\n        setGameState('ready')\r\n        setOpened(0);\r\n        setFlagged(0);\r\n        setTimer(0)\r\n    }\r\n\r\n    let status\r\n    if (gameState === 'lost') status = \"GAME OVER\"\r\n    else if (gameState === 'ready') status = \"LETS PLAY\"\r\n    else if (gameState === 'running') status = \"PLAYING\"\r\n    else if (gameState === 'won') status = \"YOU WIN\"\r\n\r\n    return (\r\n        <div className={classes.minesweeperWrapper}>\r\n\r\n            <div className={classes.minesweeper}\r\n                ref={minesweeperBoard}>\r\n\r\n                <GameHeader doubleClicked={openSettings} time={timer} minesLeft={gameConfig.mines - flagged}>\r\n                    {status}\r\n                </GameHeader>\r\n\r\n                <GameBoard\r\n                    width={gameConfig.width}\r\n                    height={gameConfig.height}\r\n                    board={board}\r\n                    gameOver={gameState === \"won\" || gameState === \"lost\"}\r\n                    clicked={revealTileHandler}\r\n                    right_clicked={flagHandler}\r\n                />\r\n            </div >\r\n            { settingsOpen ? <Settings submitted={settingsChanged} /> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Minesweeper;\r\n\r\n\r\n\r\n//content: can be -1 for bomb or a number >= 0 showing neighbouring bombs\r\n//neighbours: an array with neighbouring squares (3-8)\r\n//isOpen: has the player revealed this square?\r\n//isFlagged ??? has the player flagged it??\r\nclass Tile {\r\n    constructor(content) {\r\n        this.content = content;\r\n        this.isOpen = false;\r\n        this.isFlagged = false;\r\n        this.neighbours = [];\r\n    }\r\n}\r\n\r\n\r\nfunction generateBoard(width, height, mines) {\r\n    console.log(`MAKING BOARD ${width}x${height} with ${mines} mines`)\r\n    const max = width * height;\r\n    const board = new Array(max).fill(null)\r\n\r\n    for (let i = 0; i < max; i++) {\r\n        const newSquare = new Tile(0);\r\n        board[i] = newSquare;\r\n        const newNeighbours = [];\r\n        //find neighbours\r\n        //top-left\r\n        if (i >= width && i % width !== 0) newNeighbours.push(i - width - 1)\r\n        //top\r\n        if (i >= width) newNeighbours.push(i - width)\r\n        //top-right\r\n        if (i >= width && i % width !== width - 1) newNeighbours.push(i - width + 1)\r\n        //right\r\n        if (i % width !== width - 1) newNeighbours.push(i + 1)\r\n        //bottom-right\r\n        if (i < max - width && i % width !== width - 1) newNeighbours.push(i + width + 1)\r\n        //bottom\r\n        if (i < max - width) newNeighbours.push(i + width)\r\n        //bottom-left\r\n        if (i < max - width && i % width !== 0) newNeighbours.push(i + width - 1)\r\n        //left\r\n        if (i % width !== 0) newNeighbours.push(i - 1)\r\n\r\n        newSquare.neighbours = newNeighbours;\r\n    }\r\n\r\n    //seet up mines\r\n    let i = 1;\r\n\r\n    while (i <= mines) {\r\n        let pos = Math.floor(Math.random() * max);\r\n        //if theres a bomb there continue and get a new pos\r\n        if (board[pos].content === -1) continue;\r\n        //set new bomb\r\n        board[pos].content = -1;\r\n        board[pos].neighbours.forEach(tile => {\r\n\r\n            if (board[tile].content !== -1) board[tile].content++\r\n        })\r\n        i++\r\n    }\r\n    return board\r\n}","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\components\\GameHeader\\GameHeader.js",[],"C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\components\\GameBoard\\GameBoard.js",[],"C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\components\\GameBoard\\Square\\Square.js",["53"],"import React from 'react';\r\nimport classes from './Square.module.css'\r\nimport tileIMG from '../../../assets/TILE.png'\r\nimport tileOpenIMG from '../../../assets/TILE_OPEN.png'\r\nimport tileBoomIMG from '../../../assets/TILE_BOOM.png'\r\n\r\n\r\n\r\nconst square = (props) => {\r\n\r\n    const imgStyle = { backgroundImage: `url(${props.content === -2 ? tileBoomIMG : (props.content || props.content === 0 ? tileOpenIMG : tileIMG)})` }\r\n    const classList = [classes.square]\r\n    let _content = props.content;\r\n\r\n    // if (props.content || props.content === 0) classList.push(classes.open)\r\n    switch (props.content) {\r\n        case -10:\r\n            classList.push(classes.wrong)\r\n            _content = 'X';\r\n            break;\r\n        case -2:\r\n            classList.push(classes.boom, classes.open)\r\n            _content = '*';\r\n            break;\r\n        case -1:\r\n            classList.push(classes.danger, classes.open)\r\n            _content = '*';\r\n            break;\r\n        case 0:\r\n            classList.push(classes.one, classes.open)\r\n            _content = '';\r\n            break;\r\n        case 1:\r\n            classList.push(classes.one, classes.open)\r\n            break;\r\n        case 2:\r\n            classList.push(classes.two, classes.open)\r\n            break;\r\n        case 3:\r\n            classList.push(classes.three, classes.open)\r\n            break;\r\n        case 4:\r\n            classList.push(classes.four, classes.open)\r\n            break;\r\n        case 5:\r\n            classList.push(classes.five, classes.open)\r\n            break;\r\n        case 6:\r\n            classList.push(classes.six, classes.open)\r\n            break;\r\n        case 7:\r\n            classList.push(classes.seven, classes.open)\r\n            break;\r\n    }\r\n\r\n    if (props.flagged) {\r\n        classList.push(classes.flagged);\r\n        _content = 'B';\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            style={imgStyle}\r\n            className={classList.join(\" \")}\r\n            onContextMenu={evt => props.right_clicked(evt)}\r\n            onClick={props.clicked}>\r\n            {_content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default square;","C:\\Users\\phoeb\\OneDrive\\Desktop\\WD2\\REACT\\minesweeper\\src\\components\\Settings\\Settings.js",["54"],"import React from 'react';\r\nimport classes from './Settings.module.css'\r\n\r\n\r\nconst conf = {\r\n    begginer: [9, 9, 10],\r\n    intermediate: [16, 16, 40],\r\n    expert: [16, 30, 99],\r\n    custom: [null, null, null],\r\n}\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={classes.settings}>\r\n            <form onSubmit={props.submitted}>\r\n                <div className={classes.formrow} >\r\n                    <div>\r\n                        <input type=\"radio\" id=\"beg\" name=\"setting\" value=\"beginner\" />\r\n                        <label for=\"beg\">beginner</label>\r\n                    </div>\r\n                    <div>9</div>\r\n                    <div>9</div>\r\n                    <div>10</div>\r\n\r\n                </div>\r\n                <div className={classes.formrow}>\r\n                    <div >\r\n                        <input type=\"radio\" id=\"int\" name=\"setting\" value=\"intermediate\" />\r\n                        <label for=\"int\">intermediate</label>\r\n                    </div>\r\n                    <div>16</div>\r\n                    <div>16</div>\r\n                    <div>40</div>\r\n                </div>\r\n                <div className={classes.formrow}>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"exp\" name=\"setting\" value=\"expert\" />\r\n                        <label for=\"exp\">expert</label>\r\n                    </div>\r\n                    <div>16</div>\r\n                    <div>30</div>\r\n                    <div>99</div>\r\n                </div>\r\n                <div className={classes.formrow}>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"cus\" name=\"setting\" value=\"custom\" />\r\n                        <label for=\"cus\">custom</label>\r\n                    </div>\r\n                    <div><input className={classes.custominput} type=\"text\" name=\"cW\" /></div>\r\n                    <div><input className={classes.custominput} type=\"text\" name=\"cH\" /></div>\r\n                    <div><input className={classes.custominput} type=\"text\" name=\"cM\" /></div>\r\n                </div>\r\n                <button type=\"submit\">\r\n                    Submit\r\n                </button>\r\n\r\n\r\n\r\n            </form>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Settings;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":30,"column":8,"nodeType":"61","endLine":30,"endColumn":10,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":45,"column":8,"nodeType":"61","endLine":45,"endColumn":16,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":58,"column":33,"nodeType":"67","messageId":"68","endLine":58,"endColumn":35},{"ruleId":"65","severity":1,"message":"69","line":135,"column":21,"nodeType":"67","messageId":"68","endLine":135,"endColumn":23},{"ruleId":"65","severity":1,"message":"69","line":141,"column":21,"nodeType":"67","messageId":"68","endLine":141,"endColumn":23},{"ruleId":"65","severity":1,"message":"69","line":147,"column":21,"nodeType":"67","messageId":"68","endLine":147,"endColumn":23},{"ruleId":"65","severity":1,"message":"69","line":153,"column":21,"nodeType":"67","messageId":"68","endLine":153,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":156,"column":17,"nodeType":"67","messageId":"72","endLine":156,"endColumn":47},{"ruleId":"65","severity":1,"message":"66","line":156,"column":31,"nodeType":"67","messageId":"68","endLine":156,"endColumn":33},{"ruleId":"70","severity":1,"message":"71","line":159,"column":17,"nodeType":"67","messageId":"72","endLine":159,"endColumn":49},{"ruleId":"65","severity":1,"message":"66","line":159,"column":32,"nodeType":"67","messageId":"68","endLine":159,"endColumn":34},{"ruleId":"70","severity":1,"message":"71","line":162,"column":17,"nodeType":"67","messageId":"72","endLine":162,"endColumn":47},{"ruleId":"65","severity":1,"message":"66","line":162,"column":31,"nodeType":"67","messageId":"68","endLine":162,"endColumn":33},{"ruleId":"73","severity":1,"message":"74","line":16,"column":5,"nodeType":"75","messageId":"76","endLine":54,"endColumn":6},{"ruleId":"77","severity":1,"message":"78","line":5,"column":7,"nodeType":"79","messageId":"80","endLine":5,"endColumn":11},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'flagHandler'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has missing dependencies: 'gameWon' and 'target'. Either include them or remove the dependency array.",["84"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'conf' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [flagHandler]",{"range":"89","text":"90"},"Update the dependencies array to be: [gameWon, opened, target]",{"range":"91","text":"92"},[1251,1253],"[flagHandler]",[1619,1627],"[gameWon, opened, target]"]